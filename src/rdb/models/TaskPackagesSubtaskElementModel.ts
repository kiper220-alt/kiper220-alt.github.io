/* tslint:disable */
/* eslint-disable */
/**
 * ALTRepo API
 * altrepo API v1
 *
 * The version of the OpenAPI document: 1.19.15
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { TaskPackagesPackageElementModel } from './TaskPackagesPackageElementModel';
import {
    TaskPackagesPackageElementModelFromJSON,
    TaskPackagesPackageElementModelFromJSONTyped,
    TaskPackagesPackageElementModelToJSON,
} from './TaskPackagesPackageElementModel';

/**
 * 
 * @export
 * @interface TaskPackagesSubtaskElementModel
 */
export interface TaskPackagesSubtaskElementModel {
    /**
     * subtask id
     * @type {number}
     * @memberof TaskPackagesSubtaskElementModel
     */
    subtask?: number;
    /**
     * source package
     * @type {TaskPackagesPackageElementModel}
     * @memberof TaskPackagesSubtaskElementModel
     */
    source?: TaskPackagesPackageElementModel;
    /**
     * binary packages
     * @type {Array<TaskPackagesPackageElementModel>}
     * @memberof TaskPackagesSubtaskElementModel
     */
    binaries?: Array<TaskPackagesPackageElementModel>;
}

/**
 * Check if a given object implements the TaskPackagesSubtaskElementModel interface.
 */
export function instanceOfTaskPackagesSubtaskElementModel(value: object): value is TaskPackagesSubtaskElementModel {
    return true;
}

export function TaskPackagesSubtaskElementModelFromJSON(json: any): TaskPackagesSubtaskElementModel {
    return TaskPackagesSubtaskElementModelFromJSONTyped(json, false);
}

export function TaskPackagesSubtaskElementModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): TaskPackagesSubtaskElementModel {
    if (json == null) {
        return json;
    }
    return {
        
        'subtask': json['subtask'] == null ? undefined : json['subtask'],
        'source': json['source'] == null ? undefined : TaskPackagesPackageElementModelFromJSON(json['source']),
        'binaries': json['binaries'] == null ? undefined : ((json['binaries'] as Array<any>).map(TaskPackagesPackageElementModelFromJSON)),
    };
}

export function TaskPackagesSubtaskElementModelToJSON(value?: TaskPackagesSubtaskElementModel | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'subtask': value['subtask'],
        'source': TaskPackagesPackageElementModelToJSON(value['source']),
        'binaries': value['binaries'] == null ? undefined : ((value['binaries'] as Array<any>).map(TaskPackagesPackageElementModelToJSON)),
    };
}

