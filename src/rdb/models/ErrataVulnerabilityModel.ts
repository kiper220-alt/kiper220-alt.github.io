/* tslint:disable */
/* eslint-disable */
/**
 * ALTRepo API
 * altrepo API v1
 *
 * The version of the OpenAPI document: 1.19.15
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ErrataVulnerabilityModel
 */
export interface ErrataVulnerabilityModel {
    /**
     * vulnerability id
     * @type {string}
     * @memberof ErrataVulnerabilityModel
     */
    id?: string;
    /**
     * vulnerability hash
     * @type {string}
     * @memberof ErrataVulnerabilityModel
     */
    hash?: string;
    /**
     * vulnerability type
     * @type {string}
     * @memberof ErrataVulnerabilityModel
     */
    type?: string;
    /**
     * vulnerability summary
     * @type {string}
     * @memberof ErrataVulnerabilityModel
     */
    summary?: string;
    /**
     * vulnerability score
     * @type {number}
     * @memberof ErrataVulnerabilityModel
     */
    score?: number;
    /**
     * vulnerability severity
     * @type {string}
     * @memberof ErrataVulnerabilityModel
     */
    severity?: string;
    /**
     * vulnerability url
     * @type {string}
     * @memberof ErrataVulnerabilityModel
     */
    url?: string;
    /**
     * vulnerability modified date
     * @type {Date}
     * @memberof ErrataVulnerabilityModel
     */
    modifiedDate?: Date;
    /**
     * vulnerability published date
     * @type {Date}
     * @memberof ErrataVulnerabilityModel
     */
    publishedDate?: Date;
    /**
     * vulnerability body in JSON format
     * @type {string}
     * @memberof ErrataVulnerabilityModel
     */
    body?: string;
    /**
     * vulnerability information is valid
     * @type {boolean}
     * @memberof ErrataVulnerabilityModel
     */
    isValid?: boolean;
}

/**
 * Check if a given object implements the ErrataVulnerabilityModel interface.
 */
export function instanceOfErrataVulnerabilityModel(value: object): value is ErrataVulnerabilityModel {
    return true;
}

export function ErrataVulnerabilityModelFromJSON(json: any): ErrataVulnerabilityModel {
    return ErrataVulnerabilityModelFromJSONTyped(json, false);
}

export function ErrataVulnerabilityModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): ErrataVulnerabilityModel {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'hash': json['hash'] == null ? undefined : json['hash'],
        'type': json['type'] == null ? undefined : json['type'],
        'summary': json['summary'] == null ? undefined : json['summary'],
        'score': json['score'] == null ? undefined : json['score'],
        'severity': json['severity'] == null ? undefined : json['severity'],
        'url': json['url'] == null ? undefined : json['url'],
        'modifiedDate': json['modified_date'] == null ? undefined : (new Date(json['modified_date'])),
        'publishedDate': json['published_date'] == null ? undefined : (new Date(json['published_date'])),
        'body': json['body'] == null ? undefined : json['body'],
        'isValid': json['is_valid'] == null ? undefined : json['is_valid'],
    };
}

export function ErrataVulnerabilityModelToJSON(value?: ErrataVulnerabilityModel | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'id': value['id'],
        'hash': value['hash'],
        'type': value['type'],
        'summary': value['summary'],
        'score': value['score'],
        'severity': value['severity'],
        'url': value['url'],
        'modified_date': value['modifiedDate'] == null ? undefined : ((value['modifiedDate']).toISOString()),
        'published_date': value['publishedDate'] == null ? undefined : ((value['publishedDate']).toISOString()),
        'body': value['body'],
        'is_valid': value['isValid'],
    };
}

