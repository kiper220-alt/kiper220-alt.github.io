/* tslint:disable */
/* eslint-disable */
/**
 * ALTRepo API
 * altrepo API v1
 *
 * The version of the OpenAPI document: 1.19.15
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ErrataPackageUpdateModel } from './ErrataPackageUpdateModel';
import {
    ErrataPackageUpdateModelFromJSON,
    ErrataPackageUpdateModelFromJSONTyped,
    ErrataPackageUpdateModelToJSON,
} from './ErrataPackageUpdateModel';

/**
 * 
 * @export
 * @interface ErrataBranchUpdateModel
 */
export interface ErrataBranchUpdateModel {
    /**
     * errata id
     * @type {string}
     * @memberof ErrataBranchUpdateModel
     */
    id?: string;
    /**
     * errata type
     * @type {string}
     * @memberof ErrataBranchUpdateModel
     */
    type?: string;
    /**
     * packageset name
     * @type {string}
     * @memberof ErrataBranchUpdateModel
     */
    pkgsetName?: string;
    /**
     * packageset date
     * @type {Date}
     * @memberof ErrataBranchUpdateModel
     */
    pkgsetDate?: Date;
    /**
     * list of packages updates
     * @type {Array<ErrataPackageUpdateModel>}
     * @memberof ErrataBranchUpdateModel
     */
    packagesUpdates?: Array<ErrataPackageUpdateModel>;
}

/**
 * Check if a given object implements the ErrataBranchUpdateModel interface.
 */
export function instanceOfErrataBranchUpdateModel(value: object): value is ErrataBranchUpdateModel {
    return true;
}

export function ErrataBranchUpdateModelFromJSON(json: any): ErrataBranchUpdateModel {
    return ErrataBranchUpdateModelFromJSONTyped(json, false);
}

export function ErrataBranchUpdateModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): ErrataBranchUpdateModel {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'type': json['type'] == null ? undefined : json['type'],
        'pkgsetName': json['pkgset_name'] == null ? undefined : json['pkgset_name'],
        'pkgsetDate': json['pkgset_date'] == null ? undefined : (new Date(json['pkgset_date'])),
        'packagesUpdates': json['packages_updates'] == null ? undefined : ((json['packages_updates'] as Array<any>).map(ErrataPackageUpdateModelFromJSON)),
    };
}

export function ErrataBranchUpdateModelToJSON(value?: ErrataBranchUpdateModel | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'id': value['id'],
        'type': value['type'],
        'pkgset_name': value['pkgsetName'],
        'pkgset_date': value['pkgsetDate'] == null ? undefined : ((value['pkgsetDate']).toISOString().substring(0,10)),
        'packages_updates': value['packagesUpdates'] == null ? undefined : ((value['packagesUpdates'] as Array<any>).map(ErrataPackageUpdateModelToJSON)),
    };
}

