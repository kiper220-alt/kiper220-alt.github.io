/* tslint:disable */
/* eslint-disable */
/**
 * ALTRepo API
 * altrepo API v1
 *
 * The version of the OpenAPI document: 1.19.15
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { FindImagesByTaskImageElementModel } from './FindImagesByTaskImageElementModel';
import {
    FindImagesByTaskImageElementModelFromJSON,
    FindImagesByTaskImageElementModelFromJSONTyped,
    FindImagesByTaskImageElementModelToJSON,
} from './FindImagesByTaskImageElementModel';

/**
 * 
 * @export
 * @interface FindImagesByTaskSubtaskElementModel
 */
export interface FindImagesByTaskSubtaskElementModel {
    /**
     * subtask id
     * @type {number}
     * @memberof FindImagesByTaskSubtaskElementModel
     */
    id?: number;
    /**
     * subtask type
     * @type {string}
     * @memberof FindImagesByTaskSubtaskElementModel
     */
    type?: string;
    /**
     * subtask srpm name
     * @type {string}
     * @memberof FindImagesByTaskSubtaskElementModel
     */
    srpmName?: string;
    /**
     * subtask srpm hash
     * @type {string}
     * @memberof FindImagesByTaskSubtaskElementModel
     */
    srpmHash?: string;
    /**
     * subtask's source package version
     * @type {string}
     * @memberof FindImagesByTaskSubtaskElementModel
     */
    pkgVersion?: string;
    /**
     * subtask's source package release
     * @type {string}
     * @memberof FindImagesByTaskSubtaskElementModel
     */
    pkgRelease?: string;
    /**
     * affected images (by binary packages)
     * @type {Array<FindImagesByTaskImageElementModel>}
     * @memberof FindImagesByTaskSubtaskElementModel
     */
    images?: Array<FindImagesByTaskImageElementModel>;
}

/**
 * Check if a given object implements the FindImagesByTaskSubtaskElementModel interface.
 */
export function instanceOfFindImagesByTaskSubtaskElementModel(value: object): value is FindImagesByTaskSubtaskElementModel {
    return true;
}

export function FindImagesByTaskSubtaskElementModelFromJSON(json: any): FindImagesByTaskSubtaskElementModel {
    return FindImagesByTaskSubtaskElementModelFromJSONTyped(json, false);
}

export function FindImagesByTaskSubtaskElementModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): FindImagesByTaskSubtaskElementModel {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'type': json['type'] == null ? undefined : json['type'],
        'srpmName': json['srpm_name'] == null ? undefined : json['srpm_name'],
        'srpmHash': json['srpm_hash'] == null ? undefined : json['srpm_hash'],
        'pkgVersion': json['pkg_version'] == null ? undefined : json['pkg_version'],
        'pkgRelease': json['pkg_release'] == null ? undefined : json['pkg_release'],
        'images': json['images'] == null ? undefined : ((json['images'] as Array<any>).map(FindImagesByTaskImageElementModelFromJSON)),
    };
}

export function FindImagesByTaskSubtaskElementModelToJSON(value?: FindImagesByTaskSubtaskElementModel | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'id': value['id'],
        'type': value['type'],
        'srpm_name': value['srpmName'],
        'srpm_hash': value['srpmHash'],
        'pkg_version': value['pkgVersion'],
        'pkg_release': value['pkgRelease'],
        'images': value['images'] == null ? undefined : ((value['images'] as Array<any>).map(FindImagesByTaskImageElementModelToJSON)),
    };
}

