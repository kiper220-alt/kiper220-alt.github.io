/* tslint:disable */
/* eslint-disable */
/**
 * ALTRepo API
 * altrepo API v1
 *
 * The version of the OpenAPI document: 1.19.15
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { TaskPackagesPackageElementModel } from './TaskPackagesPackageElementModel';
import {
    TaskPackagesPackageElementModelFromJSON,
    TaskPackagesPackageElementModelFromJSONTyped,
    TaskPackagesPackageElementModelToJSON,
} from './TaskPackagesPackageElementModel';
import type { TaskPackagesSubtaskElementModel } from './TaskPackagesSubtaskElementModel';
import {
    TaskPackagesSubtaskElementModelFromJSON,
    TaskPackagesSubtaskElementModelFromJSONTyped,
    TaskPackagesSubtaskElementModelToJSON,
} from './TaskPackagesSubtaskElementModel';

/**
 * 
 * @export
 * @interface TaskPackagesModel
 */
export interface TaskPackagesModel {
    /**
     * task id
     * @type {number}
     * @memberof TaskPackagesModel
     */
    id?: number;
    /**
     * task repo
     * @type {string}
     * @memberof TaskPackagesModel
     */
    repo?: string;
    /**
     * task owner
     * @type {string}
     * @memberof TaskPackagesModel
     */
    owner?: string;
    /**
     * task state
     * @type {string}
     * @memberof TaskPackagesModel
     */
    state?: string;
    /**
     * task is test-only
     * @type {number}
     * @memberof TaskPackagesModel
     */
    testonly?: number;
    /**
     * task last try
     * @type {number}
     * @memberof TaskPackagesModel
     */
    _try?: number;
    /**
     * task last iteration
     * @type {number}
     * @memberof TaskPackagesModel
     */
    iter?: number;
    /**
     * task message
     * @type {string}
     * @memberof TaskPackagesModel
     */
    message?: string;
    /**
     * 
     * @type {Array<number>}
     * @memberof TaskPackagesModel
     */
    dependencies?: Array<number>;
    /**
     * number of subtasks found
     * @type {number}
     * @memberof TaskPackagesModel
     */
    length?: number;
    /**
     * subtask packages
     * @type {Array<TaskPackagesSubtaskElementModel>}
     * @memberof TaskPackagesModel
     */
    subtasks?: Array<TaskPackagesSubtaskElementModel>;
    /**
     * arepo packages
     * @type {Array<TaskPackagesPackageElementModel>}
     * @memberof TaskPackagesModel
     */
    arepo?: Array<TaskPackagesPackageElementModel>;
}

/**
 * Check if a given object implements the TaskPackagesModel interface.
 */
export function instanceOfTaskPackagesModel(value: object): value is TaskPackagesModel {
    return true;
}

export function TaskPackagesModelFromJSON(json: any): TaskPackagesModel {
    return TaskPackagesModelFromJSONTyped(json, false);
}

export function TaskPackagesModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): TaskPackagesModel {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'repo': json['repo'] == null ? undefined : json['repo'],
        'owner': json['owner'] == null ? undefined : json['owner'],
        'state': json['state'] == null ? undefined : json['state'],
        'testonly': json['testonly'] == null ? undefined : json['testonly'],
        '_try': json['try'] == null ? undefined : json['try'],
        'iter': json['iter'] == null ? undefined : json['iter'],
        'message': json['message'] == null ? undefined : json['message'],
        'dependencies': json['dependencies'] == null ? undefined : json['dependencies'],
        'length': json['length'] == null ? undefined : json['length'],
        'subtasks': json['subtasks'] == null ? undefined : ((json['subtasks'] as Array<any>).map(TaskPackagesSubtaskElementModelFromJSON)),
        'arepo': json['arepo'] == null ? undefined : ((json['arepo'] as Array<any>).map(TaskPackagesPackageElementModelFromJSON)),
    };
}

export function TaskPackagesModelToJSON(value?: TaskPackagesModel | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'id': value['id'],
        'repo': value['repo'],
        'owner': value['owner'],
        'state': value['state'],
        'testonly': value['testonly'],
        'try': value['_try'],
        'iter': value['iter'],
        'message': value['message'],
        'dependencies': value['dependencies'],
        'length': value['length'],
        'subtasks': value['subtasks'] == null ? undefined : ((value['subtasks'] as Array<any>).map(TaskPackagesSubtaskElementModelToJSON)),
        'arepo': value['arepo'] == null ? undefined : ((value['arepo'] as Array<any>).map(TaskPackagesPackageElementModelToJSON)),
    };
}

