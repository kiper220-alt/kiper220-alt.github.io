/* tslint:disable */
/* eslint-disable */
/**
 * ALTRepo API
 * altrepo API v1
 *
 * The version of the OpenAPI document: 1.19.15
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface FindImagesByPackageElementModel
 */
export interface FindImagesByPackageElementModel {
    /**
     * package hash UInt64 as string
     * @type {string}
     * @memberof FindImagesByPackageElementModel
     */
    pkghash?: string;
    /**
     * package name
     * @type {string}
     * @memberof FindImagesByPackageElementModel
     */
    name?: string;
    /**
     * package set name
     * @type {string}
     * @memberof FindImagesByPackageElementModel
     */
    branch?: string;
    /**
     * package version
     * @type {string}
     * @memberof FindImagesByPackageElementModel
     */
    version?: string;
    /**
     * package release
     * @type {string}
     * @memberof FindImagesByPackageElementModel
     */
    release?: string;
    /**
     * package architecture
     * @type {string}
     * @memberof FindImagesByPackageElementModel
     */
    arch?: string;
    /**
     * Image edition
     * @type {string}
     * @memberof FindImagesByPackageElementModel
     */
    edition?: string;
    /**
     * Image package set tag
     * @type {string}
     * @memberof FindImagesByPackageElementModel
     */
    tag?: string;
    /**
     * Image file name
     * @type {string}
     * @memberof FindImagesByPackageElementModel
     */
    file?: string;
    /**
     * Image package set date
     * @type {Date}
     * @memberof FindImagesByPackageElementModel
     */
    date?: Date;
}

/**
 * Check if a given object implements the FindImagesByPackageElementModel interface.
 */
export function instanceOfFindImagesByPackageElementModel(value: object): value is FindImagesByPackageElementModel {
    return true;
}

export function FindImagesByPackageElementModelFromJSON(json: any): FindImagesByPackageElementModel {
    return FindImagesByPackageElementModelFromJSONTyped(json, false);
}

export function FindImagesByPackageElementModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): FindImagesByPackageElementModel {
    if (json == null) {
        return json;
    }
    return {
        
        'pkghash': json['pkghash'] == null ? undefined : json['pkghash'],
        'name': json['name'] == null ? undefined : json['name'],
        'branch': json['branch'] == null ? undefined : json['branch'],
        'version': json['version'] == null ? undefined : json['version'],
        'release': json['release'] == null ? undefined : json['release'],
        'arch': json['arch'] == null ? undefined : json['arch'],
        'edition': json['edition'] == null ? undefined : json['edition'],
        'tag': json['tag'] == null ? undefined : json['tag'],
        'file': json['file'] == null ? undefined : json['file'],
        'date': json['date'] == null ? undefined : (new Date(json['date'])),
    };
}

export function FindImagesByPackageElementModelToJSON(value?: FindImagesByPackageElementModel | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'pkghash': value['pkghash'],
        'name': value['name'],
        'branch': value['branch'],
        'version': value['version'],
        'release': value['release'],
        'arch': value['arch'],
        'edition': value['edition'],
        'tag': value['tag'],
        'file': value['file'],
        'date': value['date'] == null ? undefined : ((value['date']).toISOString()),
    };
}

