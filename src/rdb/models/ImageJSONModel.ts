/* tslint:disable */
/* eslint-disable */
/**
 * ALTRepo API
 * altrepo API v1
 *
 * The version of the OpenAPI document: 1.19.15
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ImageJSONElementModel } from './ImageJSONElementModel';
import {
    ImageJSONElementModelFromJSON,
    ImageJSONElementModelFromJSONTyped,
    ImageJSONElementModelToJSON,
} from './ImageJSONElementModel';

/**
 * 
 * @export
 * @interface ImageJSONModel
 */
export interface ImageJSONModel {
    /**
     * image base branch
     * @type {string}
     * @memberof ImageJSONModel
     */
    imgBranch: string;
    /**
     * html description in Russian in Base64 format
     * @type {string}
     * @memberof ImageJSONModel
     */
    imgDescriptionRu?: string;
    /**
     * html description in English in Base64 format
     * @type {string}
     * @memberof ImageJSONModel
     */
    imgDescriptionEn?: string;
    /**
     * image info
     * @type {Array<ImageJSONElementModel>}
     * @memberof ImageJSONModel
     */
    images?: Array<ImageJSONElementModel>;
}

/**
 * Check if a given object implements the ImageJSONModel interface.
 */
export function instanceOfImageJSONModel(value: object): value is ImageJSONModel {
    if (!('imgBranch' in value) || value['imgBranch'] === undefined) return false;
    return true;
}

export function ImageJSONModelFromJSON(json: any): ImageJSONModel {
    return ImageJSONModelFromJSONTyped(json, false);
}

export function ImageJSONModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): ImageJSONModel {
    if (json == null) {
        return json;
    }
    return {
        
        'imgBranch': json['img_branch'],
        'imgDescriptionRu': json['img_description_ru'] == null ? undefined : json['img_description_ru'],
        'imgDescriptionEn': json['img_description_en'] == null ? undefined : json['img_description_en'],
        'images': json['images'] == null ? undefined : ((json['images'] as Array<any>).map(ImageJSONElementModelFromJSON)),
    };
}

export function ImageJSONModelToJSON(value?: ImageJSONModel | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'img_branch': value['imgBranch'],
        'img_description_ru': value['imgDescriptionRu'],
        'img_description_en': value['imgDescriptionEn'],
        'images': value['images'] == null ? undefined : ((value['images'] as Array<any>).map(ImageJSONElementModelToJSON)),
    };
}

