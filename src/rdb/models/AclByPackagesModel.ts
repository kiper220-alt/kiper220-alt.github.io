/* tslint:disable */
/* eslint-disable */
/**
 * ALTRepo API
 * altrepo API v1
 *
 * The version of the OpenAPI document: 1.19.15
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { AclByPackagesElementModel } from './AclByPackagesElementModel';
import {
    AclByPackagesElementModelFromJSON,
    AclByPackagesElementModelFromJSONTyped,
    AclByPackagesElementModelToJSON,
} from './AclByPackagesElementModel';

/**
 * 
 * @export
 * @interface AclByPackagesModel
 */
export interface AclByPackagesModel {
    /**
     * packages' branch
     * @type {string}
     * @memberof AclByPackagesModel
     */
    branch?: string;
    /**
     * packages with its ACL members
     * @type {Array<AclByPackagesElementModel>}
     * @memberof AclByPackagesModel
     */
    packages?: Array<AclByPackagesElementModel>;
}

/**
 * Check if a given object implements the AclByPackagesModel interface.
 */
export function instanceOfAclByPackagesModel(value: object): value is AclByPackagesModel {
    return true;
}

export function AclByPackagesModelFromJSON(json: any): AclByPackagesModel {
    return AclByPackagesModelFromJSONTyped(json, false);
}

export function AclByPackagesModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): AclByPackagesModel {
    if (json == null) {
        return json;
    }
    return {
        
        'branch': json['branch'] == null ? undefined : json['branch'],
        'packages': json['packages'] == null ? undefined : ((json['packages'] as Array<any>).map(AclByPackagesElementModelFromJSON)),
    };
}

export function AclByPackagesModelToJSON(value?: AclByPackagesModel | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'branch': value['branch'],
        'packages': value['packages'] == null ? undefined : ((value['packages'] as Array<any>).map(AclByPackagesElementModelToJSON)),
    };
}

