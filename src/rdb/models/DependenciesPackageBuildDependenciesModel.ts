/* tslint:disable */
/* eslint-disable */
/**
 * ALTRepo API
 * altrepo API v1
 *
 * The version of the OpenAPI document: 1.19.15
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { DependenciesPackageInfoElementModel } from './DependenciesPackageInfoElementModel';
import {
    DependenciesPackageInfoElementModelFromJSON,
    DependenciesPackageInfoElementModelFromJSONTyped,
    DependenciesPackageInfoElementModelToJSON,
} from './DependenciesPackageInfoElementModel';
import type { DependenciesPackageDependenciesElementModel } from './DependenciesPackageDependenciesElementModel';
import {
    DependenciesPackageDependenciesElementModelFromJSON,
    DependenciesPackageDependenciesElementModelFromJSONTyped,
    DependenciesPackageDependenciesElementModelToJSON,
} from './DependenciesPackageDependenciesElementModel';
import type { PackageInfoModel } from './PackageInfoModel';
import {
    PackageInfoModelFromJSON,
    PackageInfoModelFromJSONTyped,
    PackageInfoModelToJSON,
} from './PackageInfoModel';

/**
 * 
 * @export
 * @interface DependenciesPackageBuildDependenciesModel
 */
export interface DependenciesPackageBuildDependenciesModel {
    /**
     * request arguments
     * @type {object}
     * @memberof DependenciesPackageBuildDependenciesModel
     */
    requestArgs?: object;
    /**
     * number of packages found
     * @type {number}
     * @memberof DependenciesPackageBuildDependenciesModel
     */
    length?: number;
    /**
     * source package info
     * @type {PackageInfoModel}
     * @memberof DependenciesPackageBuildDependenciesModel
     */
    packageInfo?: PackageInfoModel;
    /**
     * package dependencies list
     * @type {Array<DependenciesPackageDependenciesElementModel>}
     * @memberof DependenciesPackageBuildDependenciesModel
     */
    dependencies?: Array<DependenciesPackageDependenciesElementModel>;
    /**
     * list of source packages of binary packages that provides required dependencies
     * @type {Array<DependenciesPackageInfoElementModel>}
     * @memberof DependenciesPackageBuildDependenciesModel
     */
    providedBySrc?: Array<DependenciesPackageInfoElementModel>;
}

/**
 * Check if a given object implements the DependenciesPackageBuildDependenciesModel interface.
 */
export function instanceOfDependenciesPackageBuildDependenciesModel(value: object): value is DependenciesPackageBuildDependenciesModel {
    return true;
}

export function DependenciesPackageBuildDependenciesModelFromJSON(json: any): DependenciesPackageBuildDependenciesModel {
    return DependenciesPackageBuildDependenciesModelFromJSONTyped(json, false);
}

export function DependenciesPackageBuildDependenciesModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): DependenciesPackageBuildDependenciesModel {
    if (json == null) {
        return json;
    }
    return {
        
        'requestArgs': json['request_args'] == null ? undefined : json['request_args'],
        'length': json['length'] == null ? undefined : json['length'],
        'packageInfo': json['package_info'] == null ? undefined : PackageInfoModelFromJSON(json['package_info']),
        'dependencies': json['dependencies'] == null ? undefined : ((json['dependencies'] as Array<any>).map(DependenciesPackageDependenciesElementModelFromJSON)),
        'providedBySrc': json['provided_by_src'] == null ? undefined : ((json['provided_by_src'] as Array<any>).map(DependenciesPackageInfoElementModelFromJSON)),
    };
}

export function DependenciesPackageBuildDependenciesModelToJSON(value?: DependenciesPackageBuildDependenciesModel | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'request_args': value['requestArgs'],
        'length': value['length'],
        'package_info': PackageInfoModelToJSON(value['packageInfo']),
        'dependencies': value['dependencies'] == null ? undefined : ((value['dependencies'] as Array<any>).map(DependenciesPackageDependenciesElementModelToJSON)),
        'provided_by_src': value['providedBySrc'] == null ? undefined : ((value['providedBySrc'] as Array<any>).map(DependenciesPackageInfoElementModelToJSON)),
    };
}

