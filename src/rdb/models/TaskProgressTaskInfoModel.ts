/* tslint:disable */
/* eslint-disable */
/**
 * ALTRepo API
 * altrepo API v1
 *
 * The version of the OpenAPI document: 1.19.15
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { SubTaskInfoElementModel } from './SubTaskInfoElementModel';
import {
    SubTaskInfoElementModelFromJSON,
    SubTaskInfoElementModelFromJSONTyped,
    SubTaskInfoElementModelToJSON,
} from './SubTaskInfoElementModel';
import type { TaskIterationsElementModel } from './TaskIterationsElementModel';
import {
    TaskIterationsElementModelFromJSON,
    TaskIterationsElementModelFromJSONTyped,
    TaskIterationsElementModelToJSON,
} from './TaskIterationsElementModel';

/**
 * 
 * @export
 * @interface TaskProgressTaskInfoModel
 */
export interface TaskProgressTaskInfoModel {
    /**
     * task id
     * @type {number}
     * @memberof TaskProgressTaskInfoModel
     */
    taskId?: number;
    /**
     * repository name
     * @type {string}
     * @memberof TaskProgressTaskInfoModel
     */
    taskRepo?: string;
    /**
     * task state
     * @type {string}
     * @memberof TaskProgressTaskInfoModel
     */
    taskState?: string;
    /**
     * task owner
     * @type {string}
     * @memberof TaskProgressTaskInfoModel
     */
    taskOwner?: string;
    /**
     * task try number
     * @type {number}
     * @memberof TaskProgressTaskInfoModel
     */
    taskTry?: number;
    /**
     * task iteration number
     * @type {number}
     * @memberof TaskProgressTaskInfoModel
     */
    taskIter?: number;
    /**
     * task test only
     * @type {number}
     * @memberof TaskProgressTaskInfoModel
     */
    taskTestonly?: number;
    /**
     * task changed
     * @type {Date}
     * @memberof TaskProgressTaskInfoModel
     */
    taskChanged?: Date;
    /**
     * task message
     * @type {string}
     * @memberof TaskProgressTaskInfoModel
     */
    taskMessage?: string;
    /**
     * task stage
     * @type {string}
     * @memberof TaskProgressTaskInfoModel
     */
    taskStage?: string;
    /**
     * task dependencies
     * @type {Array<number>}
     * @memberof TaskProgressTaskInfoModel
     */
    dependencies?: Array<number>;
    /**
     * list of subtasks by task
     * @type {Array<SubTaskInfoElementModel>}
     * @memberof TaskProgressTaskInfoModel
     */
    subtasks?: Array<SubTaskInfoElementModel>;
    /**
     * task iteration list
     * @type {Array<TaskIterationsElementModel>}
     * @memberof TaskProgressTaskInfoModel
     */
    iterations?: Array<TaskIterationsElementModel>;
}

/**
 * Check if a given object implements the TaskProgressTaskInfoModel interface.
 */
export function instanceOfTaskProgressTaskInfoModel(value: object): value is TaskProgressTaskInfoModel {
    return true;
}

export function TaskProgressTaskInfoModelFromJSON(json: any): TaskProgressTaskInfoModel {
    return TaskProgressTaskInfoModelFromJSONTyped(json, false);
}

export function TaskProgressTaskInfoModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): TaskProgressTaskInfoModel {
    if (json == null) {
        return json;
    }
    return {
        
        'taskId': json['task_id'] == null ? undefined : json['task_id'],
        'taskRepo': json['task_repo'] == null ? undefined : json['task_repo'],
        'taskState': json['task_state'] == null ? undefined : json['task_state'],
        'taskOwner': json['task_owner'] == null ? undefined : json['task_owner'],
        'taskTry': json['task_try'] == null ? undefined : json['task_try'],
        'taskIter': json['task_iter'] == null ? undefined : json['task_iter'],
        'taskTestonly': json['task_testonly'] == null ? undefined : json['task_testonly'],
        'taskChanged': json['task_changed'] == null ? undefined : (new Date(json['task_changed'])),
        'taskMessage': json['task_message'] == null ? undefined : json['task_message'],
        'taskStage': json['task_stage'] == null ? undefined : json['task_stage'],
        'dependencies': json['dependencies'] == null ? undefined : json['dependencies'],
        'subtasks': json['subtasks'] == null ? undefined : ((json['subtasks'] as Array<any>).map(SubTaskInfoElementModelFromJSON)),
        'iterations': json['iterations'] == null ? undefined : ((json['iterations'] as Array<any>).map(TaskIterationsElementModelFromJSON)),
    };
}

export function TaskProgressTaskInfoModelToJSON(value?: TaskProgressTaskInfoModel | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'task_id': value['taskId'],
        'task_repo': value['taskRepo'],
        'task_state': value['taskState'],
        'task_owner': value['taskOwner'],
        'task_try': value['taskTry'],
        'task_iter': value['taskIter'],
        'task_testonly': value['taskTestonly'],
        'task_changed': value['taskChanged'] == null ? undefined : ((value['taskChanged']).toISOString()),
        'task_message': value['taskMessage'],
        'task_stage': value['taskStage'],
        'dependencies': value['dependencies'],
        'subtasks': value['subtasks'] == null ? undefined : ((value['subtasks'] as Array<any>).map(SubTaskInfoElementModelToJSON)),
        'iterations': value['iterations'] == null ? undefined : ((value['iterations'] as Array<any>).map(TaskIterationsElementModelToJSON)),
    };
}

