/* tslint:disable */
/* eslint-disable */
/**
 * ALTRepo API
 * altrepo API v1
 *
 * The version of the OpenAPI document: 1.19.15
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { SiteAllPackagesetsSummaryCountsModel } from './SiteAllPackagesetsSummaryCountsModel';
import {
    SiteAllPackagesetsSummaryCountsModelFromJSON,
    SiteAllPackagesetsSummaryCountsModelFromJSONTyped,
    SiteAllPackagesetsSummaryCountsModelToJSON,
} from './SiteAllPackagesetsSummaryCountsModel';

/**
 * 
 * @export
 * @interface SiteAllPackagesetsSummaryBranchesModel
 */
export interface SiteAllPackagesetsSummaryBranchesModel {
    /**
     * package set name
     * @type {string}
     * @memberof SiteAllPackagesetsSummaryBranchesModel
     */
    branch?: string;
    /**
     * list of source packages count by binary packages archs
     * @type {Array<SiteAllPackagesetsSummaryCountsModel>}
     * @memberof SiteAllPackagesetsSummaryBranchesModel
     */
    packagesCount?: Array<SiteAllPackagesetsSummaryCountsModel>;
}

/**
 * Check if a given object implements the SiteAllPackagesetsSummaryBranchesModel interface.
 */
export function instanceOfSiteAllPackagesetsSummaryBranchesModel(value: object): value is SiteAllPackagesetsSummaryBranchesModel {
    return true;
}

export function SiteAllPackagesetsSummaryBranchesModelFromJSON(json: any): SiteAllPackagesetsSummaryBranchesModel {
    return SiteAllPackagesetsSummaryBranchesModelFromJSONTyped(json, false);
}

export function SiteAllPackagesetsSummaryBranchesModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): SiteAllPackagesetsSummaryBranchesModel {
    if (json == null) {
        return json;
    }
    return {
        
        'branch': json['branch'] == null ? undefined : json['branch'],
        'packagesCount': json['packages_count'] == null ? undefined : ((json['packages_count'] as Array<any>).map(SiteAllPackagesetsSummaryCountsModelFromJSON)),
    };
}

export function SiteAllPackagesetsSummaryBranchesModelToJSON(value?: SiteAllPackagesetsSummaryBranchesModel | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'branch': value['branch'],
        'packages_count': value['packagesCount'] == null ? undefined : ((value['packagesCount'] as Array<any>).map(SiteAllPackagesetsSummaryCountsModelToJSON)),
    };
}

