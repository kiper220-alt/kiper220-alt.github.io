/* tslint:disable */
/* eslint-disable */
/**
 * ALTRepo API
 * altrepo API v1
 *
 * The version of the OpenAPI document: 1.19.15
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { LicenseTokensElementModel } from './LicenseTokensElementModel';
import {
    LicenseTokensElementModelFromJSON,
    LicenseTokensElementModelFromJSONTyped,
    LicenseTokensElementModelToJSON,
} from './LicenseTokensElementModel';

/**
 * 
 * @export
 * @interface LicenseTokensModel
 */
export interface LicenseTokensModel {
    /**
     * 
     * @type {object}
     * @memberof LicenseTokensModel
     */
    requestArgs?: object;
    /**
     * number of tokens
     * @type {number}
     * @memberof LicenseTokensModel
     */
    length?: number;
    /**
     * list of found valid license tokens
     * @type {Array<LicenseTokensElementModel>}
     * @memberof LicenseTokensModel
     */
    tokens?: Array<LicenseTokensElementModel>;
}

/**
 * Check if a given object implements the LicenseTokensModel interface.
 */
export function instanceOfLicenseTokensModel(value: object): value is LicenseTokensModel {
    return true;
}

export function LicenseTokensModelFromJSON(json: any): LicenseTokensModel {
    return LicenseTokensModelFromJSONTyped(json, false);
}

export function LicenseTokensModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): LicenseTokensModel {
    if (json == null) {
        return json;
    }
    return {
        
        'requestArgs': json['request_args'] == null ? undefined : json['request_args'],
        'length': json['length'] == null ? undefined : json['length'],
        'tokens': json['tokens'] == null ? undefined : ((json['tokens'] as Array<any>).map(LicenseTokensElementModelFromJSON)),
    };
}

export function LicenseTokensModelToJSON(value?: LicenseTokensModel | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'request_args': value['requestArgs'],
        'length': value['length'],
        'tokens': value['tokens'] == null ? undefined : ((value['tokens'] as Array<any>).map(LicenseTokensElementModelToJSON)),
    };
}

