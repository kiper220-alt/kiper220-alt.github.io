/* tslint:disable */
/* eslint-disable */
/**
 * ALTRepo API
 * altrepo API v1
 *
 * The version of the OpenAPI document: 1.19.15
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { RepologyExportBranchSourcePackageElementModel } from './RepologyExportBranchSourcePackageElementModel';
import {
    RepologyExportBranchSourcePackageElementModelFromJSON,
    RepologyExportBranchSourcePackageElementModelFromJSONTyped,
    RepologyExportBranchSourcePackageElementModelToJSON,
} from './RepologyExportBranchSourcePackageElementModel';
import type { RepologyExportBranchStatElementModel } from './RepologyExportBranchStatElementModel';
import {
    RepologyExportBranchStatElementModelFromJSON,
    RepologyExportBranchStatElementModelFromJSONTyped,
    RepologyExportBranchStatElementModelToJSON,
} from './RepologyExportBranchStatElementModel';

/**
 * 
 * @export
 * @interface RepologyExportModel
 */
export interface RepologyExportModel {
    /**
     * package set name
     * @type {string}
     * @memberof RepologyExportModel
     */
    branch?: string;
    /**
     * package set commit date
     * @type {string}
     * @memberof RepologyExportModel
     */
    date?: string;
    /**
     * package set stats
     * @type {Array<RepologyExportBranchStatElementModel>}
     * @memberof RepologyExportModel
     */
    stats?: Array<RepologyExportBranchStatElementModel>;
    /**
     * source packages info
     * @type {Array<RepologyExportBranchSourcePackageElementModel>}
     * @memberof RepologyExportModel
     */
    packages?: Array<RepologyExportBranchSourcePackageElementModel>;
}

/**
 * Check if a given object implements the RepologyExportModel interface.
 */
export function instanceOfRepologyExportModel(value: object): value is RepologyExportModel {
    return true;
}

export function RepologyExportModelFromJSON(json: any): RepologyExportModel {
    return RepologyExportModelFromJSONTyped(json, false);
}

export function RepologyExportModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): RepologyExportModel {
    if (json == null) {
        return json;
    }
    return {
        
        'branch': json['branch'] == null ? undefined : json['branch'],
        'date': json['date'] == null ? undefined : json['date'],
        'stats': json['stats'] == null ? undefined : ((json['stats'] as Array<any>).map(RepologyExportBranchStatElementModelFromJSON)),
        'packages': json['packages'] == null ? undefined : ((json['packages'] as Array<any>).map(RepologyExportBranchSourcePackageElementModelFromJSON)),
    };
}

export function RepologyExportModelToJSON(value?: RepologyExportModel | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'branch': value['branch'],
        'date': value['date'],
        'stats': value['stats'] == null ? undefined : ((value['stats'] as Array<any>).map(RepologyExportBranchStatElementModelToJSON)),
        'packages': value['packages'] == null ? undefined : ((value['packages'] as Array<any>).map(RepologyExportBranchSourcePackageElementModelToJSON)),
    };
}

