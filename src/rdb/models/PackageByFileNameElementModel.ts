/* tslint:disable */
/* eslint-disable */
/**
 * ALTRepo API
 * altrepo API v1
 *
 * The version of the OpenAPI document: 1.19.15
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface PackageByFileNameElementModel
 */
export interface PackageByFileNameElementModel {
    /**
     * package name
     * @type {string}
     * @memberof PackageByFileNameElementModel
     */
    name?: string;
    /**
     * package version
     * @type {string}
     * @memberof PackageByFileNameElementModel
     */
    version?: string;
    /**
     * package release
     * @type {string}
     * @memberof PackageByFileNameElementModel
     */
    release?: string;
    /**
     * package disttag
     * @type {string}
     * @memberof PackageByFileNameElementModel
     */
    disttag?: string;
    /**
     * package name
     * @type {string}
     * @memberof PackageByFileNameElementModel
     */
    sha1?: string;
    /**
     * package set name
     * @type {string}
     * @memberof PackageByFileNameElementModel
     */
    branch?: string;
    /**
     * package arch
     * @type {string}
     * @memberof PackageByFileNameElementModel
     */
    arch?: string;
    /**
     * found files
     * @type {Array<string>}
     * @memberof PackageByFileNameElementModel
     */
    files?: Array<string>;
}

/**
 * Check if a given object implements the PackageByFileNameElementModel interface.
 */
export function instanceOfPackageByFileNameElementModel(value: object): value is PackageByFileNameElementModel {
    return true;
}

export function PackageByFileNameElementModelFromJSON(json: any): PackageByFileNameElementModel {
    return PackageByFileNameElementModelFromJSONTyped(json, false);
}

export function PackageByFileNameElementModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): PackageByFileNameElementModel {
    if (json == null) {
        return json;
    }
    return {
        
        'name': json['name'] == null ? undefined : json['name'],
        'version': json['version'] == null ? undefined : json['version'],
        'release': json['release'] == null ? undefined : json['release'],
        'disttag': json['disttag'] == null ? undefined : json['disttag'],
        'sha1': json['sha1'] == null ? undefined : json['sha1'],
        'branch': json['branch'] == null ? undefined : json['branch'],
        'arch': json['arch'] == null ? undefined : json['arch'],
        'files': json['files'] == null ? undefined : json['files'],
    };
}

export function PackageByFileNameElementModelToJSON(value?: PackageByFileNameElementModel | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'name': value['name'],
        'version': value['version'],
        'release': value['release'],
        'disttag': value['disttag'],
        'sha1': value['sha1'],
        'branch': value['branch'],
        'arch': value['arch'],
        'files': value['files'],
    };
}

