/* tslint:disable */
/* eslint-disable */
/**
 * ALTRepo API
 * altrepo API v1
 *
 * The version of the OpenAPI document: 1.19.15
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ErrataBugModel } from './ErrataBugModel';
import {
    ErrataBugModelFromJSON,
    ErrataBugModelFromJSONTyped,
    ErrataBugModelToJSON,
} from './ErrataBugModel';
import type { ErrataVulnerabilityModel } from './ErrataVulnerabilityModel';
import {
    ErrataVulnerabilityModelFromJSON,
    ErrataVulnerabilityModelFromJSONTyped,
    ErrataVulnerabilityModelToJSON,
} from './ErrataVulnerabilityModel';

/**
 * 
 * @export
 * @interface ErrataPackageUpdateModel
 */
export interface ErrataPackageUpdateModel {
    /**
     * errata id
     * @type {string}
     * @memberof ErrataPackageUpdateModel
     */
    id?: string;
    /**
     * errata type
     * @type {string}
     * @memberof ErrataPackageUpdateModel
     */
    type?: string;
    /**
     * errata created date
     * @type {Date}
     * @memberof ErrataPackageUpdateModel
     */
    created?: Date;
    /**
     * errata updated date
     * @type {Date}
     * @memberof ErrataPackageUpdateModel
     */
    updated?: Date;
    /**
     * packageset name
     * @type {string}
     * @memberof ErrataPackageUpdateModel
     */
    pkgsetName?: string;
    /**
     * task id
     * @type {number}
     * @memberof ErrataPackageUpdateModel
     */
    taskId?: number;
    /**
     * subtask id
     * @type {number}
     * @memberof ErrataPackageUpdateModel
     */
    subtaskId?: number;
    /**
     * task state
     * @type {string}
     * @memberof ErrataPackageUpdateModel
     */
    taskState?: string;
    /**
     * package hash
     * @type {string}
     * @memberof ErrataPackageUpdateModel
     */
    pkgHash?: string;
    /**
     * package name
     * @type {string}
     * @memberof ErrataPackageUpdateModel
     */
    pkgName?: string;
    /**
     * package version
     * @type {string}
     * @memberof ErrataPackageUpdateModel
     */
    pkgVersion?: string;
    /**
     * package release
     * @type {string}
     * @memberof ErrataPackageUpdateModel
     */
    pkgRelease?: string;
    /**
     * list of bugs
     * @type {Array<ErrataBugModel>}
     * @memberof ErrataPackageUpdateModel
     */
    bugs?: Array<ErrataBugModel>;
    /**
     * list of vulnerabilities
     * @type {Array<ErrataVulnerabilityModel>}
     * @memberof ErrataPackageUpdateModel
     */
    vulns?: Array<ErrataVulnerabilityModel>;
}

/**
 * Check if a given object implements the ErrataPackageUpdateModel interface.
 */
export function instanceOfErrataPackageUpdateModel(value: object): value is ErrataPackageUpdateModel {
    return true;
}

export function ErrataPackageUpdateModelFromJSON(json: any): ErrataPackageUpdateModel {
    return ErrataPackageUpdateModelFromJSONTyped(json, false);
}

export function ErrataPackageUpdateModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): ErrataPackageUpdateModel {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'type': json['type'] == null ? undefined : json['type'],
        'created': json['created'] == null ? undefined : (new Date(json['created'])),
        'updated': json['updated'] == null ? undefined : (new Date(json['updated'])),
        'pkgsetName': json['pkgset_name'] == null ? undefined : json['pkgset_name'],
        'taskId': json['task_id'] == null ? undefined : json['task_id'],
        'subtaskId': json['subtask_id'] == null ? undefined : json['subtask_id'],
        'taskState': json['task_state'] == null ? undefined : json['task_state'],
        'pkgHash': json['pkg_hash'] == null ? undefined : json['pkg_hash'],
        'pkgName': json['pkg_name'] == null ? undefined : json['pkg_name'],
        'pkgVersion': json['pkg_version'] == null ? undefined : json['pkg_version'],
        'pkgRelease': json['pkg_release'] == null ? undefined : json['pkg_release'],
        'bugs': json['bugs'] == null ? undefined : ((json['bugs'] as Array<any>).map(ErrataBugModelFromJSON)),
        'vulns': json['vulns'] == null ? undefined : ((json['vulns'] as Array<any>).map(ErrataVulnerabilityModelFromJSON)),
    };
}

export function ErrataPackageUpdateModelToJSON(value?: ErrataPackageUpdateModel | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'id': value['id'],
        'type': value['type'],
        'created': value['created'] == null ? undefined : ((value['created']).toISOString().substring(0,10)),
        'updated': value['updated'] == null ? undefined : ((value['updated']).toISOString().substring(0,10)),
        'pkgset_name': value['pkgsetName'],
        'task_id': value['taskId'],
        'subtask_id': value['subtaskId'],
        'task_state': value['taskState'],
        'pkg_hash': value['pkgHash'],
        'pkg_name': value['pkgName'],
        'pkg_version': value['pkgVersion'],
        'pkg_release': value['pkgRelease'],
        'bugs': value['bugs'] == null ? undefined : ((value['bugs'] as Array<any>).map(ErrataBugModelToJSON)),
        'vulns': value['vulns'] == null ? undefined : ((value['vulns'] as Array<any>).map(ErrataVulnerabilityModelToJSON)),
    };
}

