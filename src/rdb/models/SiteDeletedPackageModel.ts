/* tslint:disable */
/* eslint-disable */
/**
 * ALTRepo API
 * altrepo API v1
 *
 * The version of the OpenAPI document: 1.19.15
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface SiteDeletedPackageModel
 */
export interface SiteDeletedPackageModel {
    /**
     * package set name
     * @type {string}
     * @memberof SiteDeletedPackageModel
     */
    branch?: string;
    /**
     * package name
     * @type {string}
     * @memberof SiteDeletedPackageModel
     */
    _package?: string;
    /**
     * package version
     * @type {string}
     * @memberof SiteDeletedPackageModel
     */
    version?: string;
    /**
     * package release
     * @type {string}
     * @memberof SiteDeletedPackageModel
     */
    release?: string;
    /**
     * package hash UInt64 as string
     * @type {string}
     * @memberof SiteDeletedPackageModel
     */
    hash?: string;
    /**
     * task id
     * @type {number}
     * @memberof SiteDeletedPackageModel
     */
    taskId?: number;
    /**
     * subtask id
     * @type {number}
     * @memberof SiteDeletedPackageModel
     */
    subtaskId?: number;
    /**
     * task created by
     * @type {string}
     * @memberof SiteDeletedPackageModel
     */
    taskOwner?: string;
    /**
     * subtask created by
     * @type {string}
     * @memberof SiteDeletedPackageModel
     */
    subtaskOwner?: string;
    /**
     * task completed at
     * @type {string}
     * @memberof SiteDeletedPackageModel
     */
    taskChanged?: string;
    /**
     * task message
     * @type {string}
     * @memberof SiteDeletedPackageModel
     */
    taskMessage?: string;
}

/**
 * Check if a given object implements the SiteDeletedPackageModel interface.
 */
export function instanceOfSiteDeletedPackageModel(value: object): value is SiteDeletedPackageModel {
    return true;
}

export function SiteDeletedPackageModelFromJSON(json: any): SiteDeletedPackageModel {
    return SiteDeletedPackageModelFromJSONTyped(json, false);
}

export function SiteDeletedPackageModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): SiteDeletedPackageModel {
    if (json == null) {
        return json;
    }
    return {
        
        'branch': json['branch'] == null ? undefined : json['branch'],
        '_package': json['package'] == null ? undefined : json['package'],
        'version': json['version'] == null ? undefined : json['version'],
        'release': json['release'] == null ? undefined : json['release'],
        'hash': json['hash'] == null ? undefined : json['hash'],
        'taskId': json['task_id'] == null ? undefined : json['task_id'],
        'subtaskId': json['subtask_id'] == null ? undefined : json['subtask_id'],
        'taskOwner': json['task_owner'] == null ? undefined : json['task_owner'],
        'subtaskOwner': json['subtask_owner'] == null ? undefined : json['subtask_owner'],
        'taskChanged': json['task_changed'] == null ? undefined : json['task_changed'],
        'taskMessage': json['task_message'] == null ? undefined : json['task_message'],
    };
}

export function SiteDeletedPackageModelToJSON(value?: SiteDeletedPackageModel | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'branch': value['branch'],
        'package': value['_package'],
        'version': value['version'],
        'release': value['release'],
        'hash': value['hash'],
        'task_id': value['taskId'],
        'subtask_id': value['subtaskId'],
        'task_owner': value['taskOwner'],
        'subtask_owner': value['subtaskOwner'],
        'task_changed': value['taskChanged'],
        'task_message': value['taskMessage'],
    };
}

