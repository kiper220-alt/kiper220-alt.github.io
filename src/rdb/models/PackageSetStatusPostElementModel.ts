/* tslint:disable */
/* eslint-disable */
/**
 * ALTRepo API
 * altrepo API v1
 *
 * The version of the OpenAPI document: 1.19.15
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface PackageSetStatusPostElementModel
 */
export interface PackageSetStatusPostElementModel {
    /**
     * package set name
     * @type {string}
     * @memberof PackageSetStatusPostElementModel
     */
    pkgsetName: string;
    /**
     * package set name for bugzilla
     * @type {string}
     * @memberof PackageSetStatusPostElementModel
     */
    rsPkgsetNameBugzilla: string;
    /**
     * support start date
     * @type {Date}
     * @memberof PackageSetStatusPostElementModel
     */
    rsStartDate: Date;
    /**
     * support end date
     * @type {Date}
     * @memberof PackageSetStatusPostElementModel
     */
    rsEndDate: Date;
    /**
     * 0 - hide branch, 1 - show branch
     * @type {number}
     * @memberof PackageSetStatusPostElementModel
     */
    rsShow: number;
    /**
     * html description in Russian in Base64 format
     * @type {string}
     * @memberof PackageSetStatusPostElementModel
     */
    rsDescriptionRu: string;
    /**
     * html description in English in Base64 format
     * @type {string}
     * @memberof PackageSetStatusPostElementModel
     */
    rsDescriptionEn: string;
    /**
     * link to mailing list
     * @type {string}
     * @memberof PackageSetStatusPostElementModel
     */
    rsMailingList: string;
    /**
     * packageset mirror's auxilary info as JSON substructure
     * @type {Array<object>}
     * @memberof PackageSetStatusPostElementModel
     */
    rsMirrorsJson?: Array<object>;
}

/**
 * Check if a given object implements the PackageSetStatusPostElementModel interface.
 */
export function instanceOfPackageSetStatusPostElementModel(value: object): value is PackageSetStatusPostElementModel {
    if (!('pkgsetName' in value) || value['pkgsetName'] === undefined) return false;
    if (!('rsPkgsetNameBugzilla' in value) || value['rsPkgsetNameBugzilla'] === undefined) return false;
    if (!('rsStartDate' in value) || value['rsStartDate'] === undefined) return false;
    if (!('rsEndDate' in value) || value['rsEndDate'] === undefined) return false;
    if (!('rsShow' in value) || value['rsShow'] === undefined) return false;
    if (!('rsDescriptionRu' in value) || value['rsDescriptionRu'] === undefined) return false;
    if (!('rsDescriptionEn' in value) || value['rsDescriptionEn'] === undefined) return false;
    if (!('rsMailingList' in value) || value['rsMailingList'] === undefined) return false;
    return true;
}

export function PackageSetStatusPostElementModelFromJSON(json: any): PackageSetStatusPostElementModel {
    return PackageSetStatusPostElementModelFromJSONTyped(json, false);
}

export function PackageSetStatusPostElementModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): PackageSetStatusPostElementModel {
    if (json == null) {
        return json;
    }
    return {
        
        'pkgsetName': json['pkgset_name'],
        'rsPkgsetNameBugzilla': json['rs_pkgset_name_bugzilla'],
        'rsStartDate': (new Date(json['rs_start_date'])),
        'rsEndDate': (new Date(json['rs_end_date'])),
        'rsShow': json['rs_show'],
        'rsDescriptionRu': json['rs_description_ru'],
        'rsDescriptionEn': json['rs_description_en'],
        'rsMailingList': json['rs_mailing_list'],
        'rsMirrorsJson': json['rs_mirrors_json'] == null ? undefined : json['rs_mirrors_json'],
    };
}

export function PackageSetStatusPostElementModelToJSON(value?: PackageSetStatusPostElementModel | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'pkgset_name': value['pkgsetName'],
        'rs_pkgset_name_bugzilla': value['rsPkgsetNameBugzilla'],
        'rs_start_date': ((value['rsStartDate']).toISOString()),
        'rs_end_date': ((value['rsEndDate']).toISOString()),
        'rs_show': value['rsShow'],
        'rs_description_ru': value['rsDescriptionRu'],
        'rs_description_en': value['rsDescriptionEn'],
        'rs_mailing_list': value['rsMailingList'],
        'rs_mirrors_json': value['rsMirrorsJson'],
    };
}

