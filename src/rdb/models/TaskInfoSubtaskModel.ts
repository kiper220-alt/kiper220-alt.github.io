/* tslint:disable */
/* eslint-disable */
/**
 * ALTRepo API
 * altrepo API v1
 *
 * The version of the OpenAPI document: 1.19.15
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { TaskInfoArchsModel } from './TaskInfoArchsModel';
import {
    TaskInfoArchsModelFromJSON,
    TaskInfoArchsModelFromJSONTyped,
    TaskInfoArchsModelToJSON,
} from './TaskInfoArchsModel';
import type { TaskInfoApprovalsModel } from './TaskInfoApprovalsModel';
import {
    TaskInfoApprovalsModelFromJSON,
    TaskInfoApprovalsModelFromJSONTyped,
    TaskInfoApprovalsModelToJSON,
} from './TaskInfoApprovalsModel';
import type { TaskInfoPackageModel } from './TaskInfoPackageModel';
import {
    TaskInfoPackageModelFromJSON,
    TaskInfoPackageModelFromJSONTyped,
    TaskInfoPackageModelToJSON,
} from './TaskInfoPackageModel';

/**
 * 
 * @export
 * @interface TaskInfoSubtaskModel
 */
export interface TaskInfoSubtaskModel {
    /**
     * subtask id
     * @type {number}
     * @memberof TaskInfoSubtaskModel
     */
    subtaskId?: number;
    /**
     * subtask state last changed
     * @type {string}
     * @memberof TaskInfoSubtaskModel
     */
    lastChanged?: string;
    /**
     * subtask creator
     * @type {string}
     * @memberof TaskInfoSubtaskModel
     */
    userid?: string;
    /**
     * subtask type
     * @type {string}
     * @memberof TaskInfoSubtaskModel
     */
    type?: string;
    /**
     * subtask sid
     * @type {string}
     * @memberof TaskInfoSubtaskModel
     */
    sid?: string;
    /**
     * subtask dir
     * @type {string}
     * @memberof TaskInfoSubtaskModel
     */
    dir?: string;
    /**
     * subtask package
     * @type {string}
     * @memberof TaskInfoSubtaskModel
     */
    _package?: string;
    /**
     * gear tag author
     * @type {string}
     * @memberof TaskInfoSubtaskModel
     */
    tagAuthor?: string;
    /**
     * gear tag name
     * @type {string}
     * @memberof TaskInfoSubtaskModel
     */
    tagName?: string;
    /**
     * gear tag id
     * @type {string}
     * @memberof TaskInfoSubtaskModel
     */
    tagId?: string;
    /**
     * source package
     * @type {string}
     * @memberof TaskInfoSubtaskModel
     */
    srpm?: string;
    /**
     * source package name
     * @type {string}
     * @memberof TaskInfoSubtaskModel
     */
    srpmName?: string;
    /**
     * source package EVR
     * @type {string}
     * @memberof TaskInfoSubtaskModel
     */
    srpmEvr?: string;
    /**
     * package copy from
     * @type {string}
     * @memberof TaskInfoSubtaskModel
     */
    pkgFrom?: string;
    /**
     * 
     * @type {TaskInfoPackageModel}
     * @memberof TaskInfoSubtaskModel
     */
    sourcePackage?: TaskInfoPackageModel;
    /**
     * subtask approvals
     * @type {Array<TaskInfoApprovalsModel>}
     * @memberof TaskInfoSubtaskModel
     */
    approvals?: Array<TaskInfoApprovalsModel>;
    /**
     * subtask archs
     * @type {Array<TaskInfoArchsModel>}
     * @memberof TaskInfoSubtaskModel
     */
    archs?: Array<TaskInfoArchsModel>;
}

/**
 * Check if a given object implements the TaskInfoSubtaskModel interface.
 */
export function instanceOfTaskInfoSubtaskModel(value: object): value is TaskInfoSubtaskModel {
    return true;
}

export function TaskInfoSubtaskModelFromJSON(json: any): TaskInfoSubtaskModel {
    return TaskInfoSubtaskModelFromJSONTyped(json, false);
}

export function TaskInfoSubtaskModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): TaskInfoSubtaskModel {
    if (json == null) {
        return json;
    }
    return {
        
        'subtaskId': json['subtask_id'] == null ? undefined : json['subtask_id'],
        'lastChanged': json['last_changed'] == null ? undefined : json['last_changed'],
        'userid': json['userid'] == null ? undefined : json['userid'],
        'type': json['type'] == null ? undefined : json['type'],
        'sid': json['sid'] == null ? undefined : json['sid'],
        'dir': json['dir'] == null ? undefined : json['dir'],
        '_package': json['package'] == null ? undefined : json['package'],
        'tagAuthor': json['tag_author'] == null ? undefined : json['tag_author'],
        'tagName': json['tag_name'] == null ? undefined : json['tag_name'],
        'tagId': json['tag_id'] == null ? undefined : json['tag_id'],
        'srpm': json['srpm'] == null ? undefined : json['srpm'],
        'srpmName': json['srpm_name'] == null ? undefined : json['srpm_name'],
        'srpmEvr': json['srpm_evr'] == null ? undefined : json['srpm_evr'],
        'pkgFrom': json['pkg_from'] == null ? undefined : json['pkg_from'],
        'sourcePackage': json['source_package'] == null ? undefined : TaskInfoPackageModelFromJSON(json['source_package']),
        'approvals': json['approvals'] == null ? undefined : ((json['approvals'] as Array<any>).map(TaskInfoApprovalsModelFromJSON)),
        'archs': json['archs'] == null ? undefined : ((json['archs'] as Array<any>).map(TaskInfoArchsModelFromJSON)),
    };
}

export function TaskInfoSubtaskModelToJSON(value?: TaskInfoSubtaskModel | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'subtask_id': value['subtaskId'],
        'last_changed': value['lastChanged'],
        'userid': value['userid'],
        'type': value['type'],
        'sid': value['sid'],
        'dir': value['dir'],
        'package': value['_package'],
        'tag_author': value['tagAuthor'],
        'tag_name': value['tagName'],
        'tag_id': value['tagId'],
        'srpm': value['srpm'],
        'srpm_name': value['srpmName'],
        'srpm_evr': value['srpmEvr'],
        'pkg_from': value['pkgFrom'],
        'source_package': TaskInfoPackageModelToJSON(value['sourcePackage']),
        'approvals': value['approvals'] == null ? undefined : ((value['approvals'] as Array<any>).map(TaskInfoApprovalsModelToJSON)),
        'archs': value['archs'] == null ? undefined : ((value['archs'] as Array<any>).map(TaskInfoArchsModelToJSON)),
    };
}

