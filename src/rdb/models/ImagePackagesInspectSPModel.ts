/* tslint:disable */
/* eslint-disable */
/**
 * ALTRepo API
 * altrepo API v1
 *
 * The version of the OpenAPI document: 1.19.15
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ImagePackagesInspectSPPackageModel } from './ImagePackagesInspectSPPackageModel';
import {
    ImagePackagesInspectSPPackageModelFromJSON,
    ImagePackagesInspectSPPackageModelFromJSONTyped,
    ImagePackagesInspectSPPackageModelToJSON,
} from './ImagePackagesInspectSPPackageModel';

/**
 * 
 * @export
 * @interface ImagePackagesInspectSPModel
 */
export interface ImagePackagesInspectSPModel {
    /**
     * request arguments
     * @type {object}
     * @memberof ImagePackagesInspectSPModel
     */
    requestArgs?: object;
    /**
     * number of input packages
     * @type {number}
     * @memberof ImagePackagesInspectSPModel
     */
    inputPakages?: number;
    /**
     * number of packages found in branch
     * @type {number}
     * @memberof ImagePackagesInspectSPModel
     */
    inBranch?: number;
    /**
     * number of packages not found in branch
     * @type {number}
     * @memberof ImagePackagesInspectSPModel
     */
    notInBranch?: number;
    /**
     * number of packages found in build tasks
     * @type {number}
     * @memberof ImagePackagesInspectSPModel
     */
    foundInTasks?: number;
    /**
     * number of packages not found in database
     * @type {number}
     * @memberof ImagePackagesInspectSPModel
     */
    notFoundInDb?: number;
    /**
     * list of packages with inspection results
     * @type {Array<ImagePackagesInspectSPPackageModel>}
     * @memberof ImagePackagesInspectSPModel
     */
    packages?: Array<ImagePackagesInspectSPPackageModel>;
}

/**
 * Check if a given object implements the ImagePackagesInspectSPModel interface.
 */
export function instanceOfImagePackagesInspectSPModel(value: object): value is ImagePackagesInspectSPModel {
    return true;
}

export function ImagePackagesInspectSPModelFromJSON(json: any): ImagePackagesInspectSPModel {
    return ImagePackagesInspectSPModelFromJSONTyped(json, false);
}

export function ImagePackagesInspectSPModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): ImagePackagesInspectSPModel {
    if (json == null) {
        return json;
    }
    return {
        
        'requestArgs': json['request_args'] == null ? undefined : json['request_args'],
        'inputPakages': json['input_pakages'] == null ? undefined : json['input_pakages'],
        'inBranch': json['in_branch'] == null ? undefined : json['in_branch'],
        'notInBranch': json['not_in_branch'] == null ? undefined : json['not_in_branch'],
        'foundInTasks': json['found_in_tasks'] == null ? undefined : json['found_in_tasks'],
        'notFoundInDb': json['not_found_in_db'] == null ? undefined : json['not_found_in_db'],
        'packages': json['packages'] == null ? undefined : ((json['packages'] as Array<any>).map(ImagePackagesInspectSPPackageModelFromJSON)),
    };
}

export function ImagePackagesInspectSPModelToJSON(value?: ImagePackagesInspectSPModel | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'request_args': value['requestArgs'],
        'input_pakages': value['inputPakages'],
        'in_branch': value['inBranch'],
        'not_in_branch': value['notInBranch'],
        'found_in_tasks': value['foundInTasks'],
        'not_found_in_db': value['notFoundInDb'],
        'packages': value['packages'] == null ? undefined : ((value['packages'] as Array<any>).map(ImagePackagesInspectSPPackageModelToJSON)),
    };
}

