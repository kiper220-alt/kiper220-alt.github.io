/* tslint:disable */
/* eslint-disable */
/**
 * ALTRepo API
 * altrepo API v1
 *
 * The version of the OpenAPI document: 1.19.15
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { TaskInfoSubtaskModel } from './TaskInfoSubtaskModel';
import {
    TaskInfoSubtaskModelFromJSON,
    TaskInfoSubtaskModelFromJSONTyped,
    TaskInfoSubtaskModelToJSON,
} from './TaskInfoSubtaskModel';
import type { TaskInfoPlan2Model } from './TaskInfoPlan2Model';
import {
    TaskInfoPlan2ModelFromJSON,
    TaskInfoPlan2ModelFromJSONTyped,
    TaskInfoPlan2ModelToJSON,
} from './TaskInfoPlan2Model';

/**
 * 
 * @export
 * @interface TaskInfoModel
 */
export interface TaskInfoModel {
    /**
     * task id
     * @type {number}
     * @memberof TaskInfoModel
     */
    id?: number;
    /**
     * previous task id
     * @type {number}
     * @memberof TaskInfoModel
     */
    prev?: number;
    /**
     * task try
     * @type {number}
     * @memberof TaskInfoModel
     */
    _try?: number;
    /**
     * task iteration
     * @type {number}
     * @memberof TaskInfoModel
     */
    iter?: number;
    /**
     * all task rebuilds
     * @type {Array<string>}
     * @memberof TaskInfoModel
     */
    rebuilds?: Array<string>;
    /**
     * task state
     * @type {string}
     * @memberof TaskInfoModel
     */
    state?: string;
    /**
     * task branch
     * @type {string}
     * @memberof TaskInfoModel
     */
    branch?: string;
    /**
     * task owner
     * @type {string}
     * @memberof TaskInfoModel
     */
    user?: string;
    /**
     * task ran by
     * @type {string}
     * @memberof TaskInfoModel
     */
    runby?: string;
    /**
     * testonly flag
     * @type {number}
     * @memberof TaskInfoModel
     */
    testonly?: number;
    /**
     * failearly flag
     * @type {number}
     * @memberof TaskInfoModel
     */
    failearly?: number;
    /**
     * shared flag
     * @type {number}
     * @memberof TaskInfoModel
     */
    shared?: number;
    /**
     * task depends on
     * @type {Array<number>}
     * @memberof TaskInfoModel
     */
    depends?: Array<number>;
    /**
     * task message
     * @type {string}
     * @memberof TaskInfoModel
     */
    message?: string;
    /**
     * task version
     * @type {string}
     * @memberof TaskInfoModel
     */
    version?: string;
    /**
     * task state last changed
     * @type {string}
     * @memberof TaskInfoModel
     */
    lastChanged?: string;
    /**
     * task subtasks
     * @type {Array<TaskInfoSubtaskModel>}
     * @memberof TaskInfoModel
     */
    subtasks?: Array<TaskInfoSubtaskModel>;
    /**
     * task packages add/delete
     * @type {TaskInfoPlan2Model}
     * @memberof TaskInfoModel
     */
    plan?: TaskInfoPlan2Model;
}

/**
 * Check if a given object implements the TaskInfoModel interface.
 */
export function instanceOfTaskInfoModel(value: object): value is TaskInfoModel {
    return true;
}

export function TaskInfoModelFromJSON(json: any): TaskInfoModel {
    return TaskInfoModelFromJSONTyped(json, false);
}

export function TaskInfoModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): TaskInfoModel {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'prev': json['prev'] == null ? undefined : json['prev'],
        '_try': json['try'] == null ? undefined : json['try'],
        'iter': json['iter'] == null ? undefined : json['iter'],
        'rebuilds': json['rebuilds'] == null ? undefined : json['rebuilds'],
        'state': json['state'] == null ? undefined : json['state'],
        'branch': json['branch'] == null ? undefined : json['branch'],
        'user': json['user'] == null ? undefined : json['user'],
        'runby': json['runby'] == null ? undefined : json['runby'],
        'testonly': json['testonly'] == null ? undefined : json['testonly'],
        'failearly': json['failearly'] == null ? undefined : json['failearly'],
        'shared': json['shared'] == null ? undefined : json['shared'],
        'depends': json['depends'] == null ? undefined : json['depends'],
        'message': json['message'] == null ? undefined : json['message'],
        'version': json['version'] == null ? undefined : json['version'],
        'lastChanged': json['last_changed'] == null ? undefined : json['last_changed'],
        'subtasks': json['subtasks'] == null ? undefined : ((json['subtasks'] as Array<any>).map(TaskInfoSubtaskModelFromJSON)),
        'plan': json['plan'] == null ? undefined : TaskInfoPlan2ModelFromJSON(json['plan']),
    };
}

export function TaskInfoModelToJSON(value?: TaskInfoModel | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'id': value['id'],
        'prev': value['prev'],
        'try': value['_try'],
        'iter': value['iter'],
        'rebuilds': value['rebuilds'],
        'state': value['state'],
        'branch': value['branch'],
        'user': value['user'],
        'runby': value['runby'],
        'testonly': value['testonly'],
        'failearly': value['failearly'],
        'shared': value['shared'],
        'depends': value['depends'],
        'message': value['message'],
        'version': value['version'],
        'last_changed': value['lastChanged'],
        'subtasks': value['subtasks'] == null ? undefined : ((value['subtasks'] as Array<any>).map(TaskInfoSubtaskModelToJSON)),
        'plan': TaskInfoPlan2ModelToJSON(value['plan']),
    };
}

