/* tslint:disable */
/* eslint-disable */
/**
 * ALTRepo API
 * altrepo API v1
 *
 * The version of the OpenAPI document: 1.19.15
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { SiteTaskByNamePackageModel } from './SiteTaskByNamePackageModel';
import {
    SiteTaskByNamePackageModelFromJSON,
    SiteTaskByNamePackageModelFromJSONTyped,
    SiteTaskByNamePackageModelToJSON,
} from './SiteTaskByNamePackageModel';

/**
 * 
 * @export
 * @interface SiteTaskByNameTaskModel
 */
export interface SiteTaskByNameTaskModel {
    /**
     * task id
     * @type {number}
     * @memberof SiteTaskByNameTaskModel
     */
    id?: number;
    /**
     * task state
     * @type {string}
     * @memberof SiteTaskByNameTaskModel
     */
    state?: string;
    /**
     * task branch
     * @type {string}
     * @memberof SiteTaskByNameTaskModel
     */
    branch?: string;
    /**
     * task owner nickname
     * @type {string}
     * @memberof SiteTaskByNameTaskModel
     */
    owner?: string;
    /**
     * task last changed (ISO 8601 format)
     * @type {string}
     * @memberof SiteTaskByNameTaskModel
     */
    changed?: string;
    /**
     * task packages
     * @type {Array<SiteTaskByNamePackageModel>}
     * @memberof SiteTaskByNameTaskModel
     */
    packages?: Array<SiteTaskByNamePackageModel>;
}

/**
 * Check if a given object implements the SiteTaskByNameTaskModel interface.
 */
export function instanceOfSiteTaskByNameTaskModel(value: object): value is SiteTaskByNameTaskModel {
    return true;
}

export function SiteTaskByNameTaskModelFromJSON(json: any): SiteTaskByNameTaskModel {
    return SiteTaskByNameTaskModelFromJSONTyped(json, false);
}

export function SiteTaskByNameTaskModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): SiteTaskByNameTaskModel {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'state': json['state'] == null ? undefined : json['state'],
        'branch': json['branch'] == null ? undefined : json['branch'],
        'owner': json['owner'] == null ? undefined : json['owner'],
        'changed': json['changed'] == null ? undefined : json['changed'],
        'packages': json['packages'] == null ? undefined : ((json['packages'] as Array<any>).map(SiteTaskByNamePackageModelFromJSON)),
    };
}

export function SiteTaskByNameTaskModelToJSON(value?: SiteTaskByNameTaskModel | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'id': value['id'],
        'state': value['state'],
        'branch': value['branch'],
        'owner': value['owner'],
        'changed': value['changed'],
        'packages': value['packages'] == null ? undefined : ((value['packages'] as Array<any>).map(SiteTaskByNamePackageModelToJSON)),
    };
}

