/* tslint:disable */
/* eslint-disable */
/**
 * ALTRepo API
 * altrepo API v1
 *
 * The version of the OpenAPI document: 1.19.15
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { SitePackageInfoArchsModel } from './SitePackageInfoArchsModel';
import {
    SitePackageInfoArchsModelFromJSON,
    SitePackageInfoArchsModelFromJSONTyped,
    SitePackageInfoArchsModelToJSON,
} from './SitePackageInfoArchsModel';
import type { SitePackageNewVersionModel } from './SitePackageNewVersionModel';
import {
    SitePackageNewVersionModelFromJSON,
    SitePackageNewVersionModelFromJSONTyped,
    SitePackageNewVersionModelToJSON,
} from './SitePackageNewVersionModel';
import type { SitePackageTasksElementModel } from './SitePackageTasksElementModel';
import {
    SitePackageTasksElementModelFromJSON,
    SitePackageTasksElementModelFromJSONTyped,
    SitePackageTasksElementModelToJSON,
} from './SitePackageTasksElementModel';
import type { SitePackageDependenciesElementModel } from './SitePackageDependenciesElementModel';
import {
    SitePackageDependenciesElementModelFromJSON,
    SitePackageDependenciesElementModelFromJSONTyped,
    SitePackageDependenciesElementModelToJSON,
} from './SitePackageDependenciesElementModel';
import type { SitePackageLicenseTokensElementModel } from './SitePackageLicenseTokensElementModel';
import {
    SitePackageLicenseTokensElementModelFromJSON,
    SitePackageLicenseTokensElementModelFromJSONTyped,
    SitePackageLicenseTokensElementModelToJSON,
} from './SitePackageLicenseTokensElementModel';
import type { SitePackageInfoChangelogElementModel } from './SitePackageInfoChangelogElementModel';
import {
    SitePackageInfoChangelogElementModelFromJSON,
    SitePackageInfoChangelogElementModelFromJSONTyped,
    SitePackageInfoChangelogElementModelToJSON,
} from './SitePackageInfoChangelogElementModel';
import type { SitePackageBeehiveElementModel } from './SitePackageBeehiveElementModel';
import {
    SitePackageBeehiveElementModelFromJSON,
    SitePackageBeehiveElementModelFromJSONTyped,
    SitePackageBeehiveElementModelToJSON,
} from './SitePackageBeehiveElementModel';

/**
 * 
 * @export
 * @interface SitePackageInfoModel
 */
export interface SitePackageInfoModel {
    /**
     * package hash UInt64 as string
     * @type {string}
     * @memberof SitePackageInfoModel
     */
    pkghash?: string;
    /**
     * request arguments
     * @type {object}
     * @memberof SitePackageInfoModel
     */
    requestArgs?: object;
    /**
     * package name
     * @type {string}
     * @memberof SitePackageInfoModel
     */
    name?: string;
    /**
     * package version
     * @type {string}
     * @memberof SitePackageInfoModel
     */
    version?: string;
    /**
     * package release
     * @type {string}
     * @memberof SitePackageInfoModel
     */
    release?: string;
    /**
     * package arch
     * @type {string}
     * @memberof SitePackageInfoModel
     */
    arch?: string;
    /**
     * package build time
     * @type {number}
     * @memberof SitePackageInfoModel
     */
    buildtime?: number;
    /**
     * package build task
     * @type {number}
     * @memberof SitePackageInfoModel
     */
    task?: number;
    /**
     * task build date (ISO 8601 format)
     * @type {string}
     * @memberof SitePackageInfoModel
     */
    taskDate?: string;
    /**
     * package task gear type
     * @type {string}
     * @memberof SitePackageInfoModel
     */
    gear?: string;
    /**
     * package license
     * @type {string}
     * @memberof SitePackageInfoModel
     */
    license?: string;
    /**
     * package group
     * @type {string}
     * @memberof SitePackageInfoModel
     */
    category?: string;
    /**
     * package url
     * @type {string}
     * @memberof SitePackageInfoModel
     */
    url?: string;
    /**
     * package vcs
     * @type {string}
     * @memberof SitePackageInfoModel
     */
    vcs?: string;
    /**
     * package summary
     * @type {string}
     * @memberof SitePackageInfoModel
     */
    summary?: string;
    /**
     * package description
     * @type {string}
     * @memberof SitePackageInfoModel
     */
    description?: string;
    /**
     * package packager name
     * @type {string}
     * @memberof SitePackageInfoModel
     */
    packager?: string;
    /**
     * package packager nickname
     * @type {string}
     * @memberof SitePackageInfoModel
     */
    packagerNickname?: string;
    /**
     * binary packages
     * @type {Array<string>}
     * @memberof SitePackageInfoModel
     */
    acl?: Array<string>;
    /**
     * all maintainer's nicknames
     * @type {Array<string>}
     * @memberof SitePackageInfoModel
     */
    maintainers?: Array<string>;
    /**
     * List of source or binary packages by archs
     * @type {Array<SitePackageInfoArchsModel>}
     * @memberof SitePackageInfoModel
     */
    packageArchs?: Array<SitePackageInfoArchsModel>;
    /**
     * package tasks
     * @type {Array<SitePackageTasksElementModel>}
     * @memberof SitePackageInfoModel
     */
    tasks?: Array<SitePackageTasksElementModel>;
    /**
     * package changelog
     * @type {Array<SitePackageInfoChangelogElementModel>}
     * @memberof SitePackageInfoModel
     */
    changelog?: Array<SitePackageInfoChangelogElementModel>;
    /**
     * new package version
     * @type {Array<SitePackageNewVersionModel>}
     * @memberof SitePackageInfoModel
     */
    newVersion?: Array<SitePackageNewVersionModel>;
    /**
     * Beehive rebuild status
     * @type {Array<SitePackageBeehiveElementModel>}
     * @memberof SitePackageInfoModel
     */
    beehive?: Array<SitePackageBeehiveElementModel>;
    /**
     * all the dependence of the package
     * @type {Array<SitePackageDependenciesElementModel>}
     * @memberof SitePackageInfoModel
     */
    dependencies?: Array<SitePackageDependenciesElementModel>;
    /**
     * list of found valid license tokens
     * @type {Array<SitePackageLicenseTokensElementModel>}
     * @memberof SitePackageInfoModel
     */
    licenseTokens?: Array<SitePackageLicenseTokensElementModel>;
}

/**
 * Check if a given object implements the SitePackageInfoModel interface.
 */
export function instanceOfSitePackageInfoModel(value: object): value is SitePackageInfoModel {
    return true;
}

export function SitePackageInfoModelFromJSON(json: any): SitePackageInfoModel {
    return SitePackageInfoModelFromJSONTyped(json, false);
}

export function SitePackageInfoModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): SitePackageInfoModel {
    if (json == null) {
        return json;
    }
    return {
        
        'pkghash': json['pkghash'] == null ? undefined : json['pkghash'],
        'requestArgs': json['request_args'] == null ? undefined : json['request_args'],
        'name': json['name'] == null ? undefined : json['name'],
        'version': json['version'] == null ? undefined : json['version'],
        'release': json['release'] == null ? undefined : json['release'],
        'arch': json['arch'] == null ? undefined : json['arch'],
        'buildtime': json['buildtime'] == null ? undefined : json['buildtime'],
        'task': json['task'] == null ? undefined : json['task'],
        'taskDate': json['task_date'] == null ? undefined : json['task_date'],
        'gear': json['gear'] == null ? undefined : json['gear'],
        'license': json['license'] == null ? undefined : json['license'],
        'category': json['category'] == null ? undefined : json['category'],
        'url': json['url'] == null ? undefined : json['url'],
        'vcs': json['vcs'] == null ? undefined : json['vcs'],
        'summary': json['summary'] == null ? undefined : json['summary'],
        'description': json['description'] == null ? undefined : json['description'],
        'packager': json['packager'] == null ? undefined : json['packager'],
        'packagerNickname': json['packager_nickname'] == null ? undefined : json['packager_nickname'],
        'acl': json['acl'] == null ? undefined : json['acl'],
        'maintainers': json['maintainers'] == null ? undefined : json['maintainers'],
        'packageArchs': json['package_archs'] == null ? undefined : ((json['package_archs'] as Array<any>).map(SitePackageInfoArchsModelFromJSON)),
        'tasks': json['tasks'] == null ? undefined : ((json['tasks'] as Array<any>).map(SitePackageTasksElementModelFromJSON)),
        'changelog': json['changelog'] == null ? undefined : ((json['changelog'] as Array<any>).map(SitePackageInfoChangelogElementModelFromJSON)),
        'newVersion': json['new_version'] == null ? undefined : ((json['new_version'] as Array<any>).map(SitePackageNewVersionModelFromJSON)),
        'beehive': json['beehive'] == null ? undefined : ((json['beehive'] as Array<any>).map(SitePackageBeehiveElementModelFromJSON)),
        'dependencies': json['dependencies'] == null ? undefined : ((json['dependencies'] as Array<any>).map(SitePackageDependenciesElementModelFromJSON)),
        'licenseTokens': json['license_tokens'] == null ? undefined : ((json['license_tokens'] as Array<any>).map(SitePackageLicenseTokensElementModelFromJSON)),
    };
}

export function SitePackageInfoModelToJSON(value?: SitePackageInfoModel | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'pkghash': value['pkghash'],
        'request_args': value['requestArgs'],
        'name': value['name'],
        'version': value['version'],
        'release': value['release'],
        'arch': value['arch'],
        'buildtime': value['buildtime'],
        'task': value['task'],
        'task_date': value['taskDate'],
        'gear': value['gear'],
        'license': value['license'],
        'category': value['category'],
        'url': value['url'],
        'vcs': value['vcs'],
        'summary': value['summary'],
        'description': value['description'],
        'packager': value['packager'],
        'packager_nickname': value['packagerNickname'],
        'acl': value['acl'],
        'maintainers': value['maintainers'],
        'package_archs': value['packageArchs'] == null ? undefined : ((value['packageArchs'] as Array<any>).map(SitePackageInfoArchsModelToJSON)),
        'tasks': value['tasks'] == null ? undefined : ((value['tasks'] as Array<any>).map(SitePackageTasksElementModelToJSON)),
        'changelog': value['changelog'] == null ? undefined : ((value['changelog'] as Array<any>).map(SitePackageInfoChangelogElementModelToJSON)),
        'new_version': value['newVersion'] == null ? undefined : ((value['newVersion'] as Array<any>).map(SitePackageNewVersionModelToJSON)),
        'beehive': value['beehive'] == null ? undefined : ((value['beehive'] as Array<any>).map(SitePackageBeehiveElementModelToJSON)),
        'dependencies': value['dependencies'] == null ? undefined : ((value['dependencies'] as Array<any>).map(SitePackageDependenciesElementModelToJSON)),
        'license_tokens': value['licenseTokens'] == null ? undefined : ((value['licenseTokens'] as Array<any>).map(SitePackageLicenseTokensElementModelToJSON)),
    };
}

