/* tslint:disable */
/* eslint-disable */
/**
 * ALTRepo API
 * altrepo API v1
 *
 * The version of the OpenAPI document: 1.19.15
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { SitemapPackagesElementModel } from './SitemapPackagesElementModel';
import {
    SitemapPackagesElementModelFromJSON,
    SitemapPackagesElementModelFromJSONTyped,
    SitemapPackagesElementModelToJSON,
} from './SitemapPackagesElementModel';

/**
 * 
 * @export
 * @interface SitemapPackagesExportModel
 */
export interface SitemapPackagesExportModel {
    /**
     * package set name
     * @type {string}
     * @memberof SitemapPackagesExportModel
     */
    branch?: string;
    /**
     * source packages info
     * @type {Array<SitemapPackagesElementModel>}
     * @memberof SitemapPackagesExportModel
     */
    packages?: Array<SitemapPackagesElementModel>;
}

/**
 * Check if a given object implements the SitemapPackagesExportModel interface.
 */
export function instanceOfSitemapPackagesExportModel(value: object): value is SitemapPackagesExportModel {
    return true;
}

export function SitemapPackagesExportModelFromJSON(json: any): SitemapPackagesExportModel {
    return SitemapPackagesExportModelFromJSONTyped(json, false);
}

export function SitemapPackagesExportModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): SitemapPackagesExportModel {
    if (json == null) {
        return json;
    }
    return {
        
        'branch': json['branch'] == null ? undefined : json['branch'],
        'packages': json['packages'] == null ? undefined : ((json['packages'] as Array<any>).map(SitemapPackagesElementModelFromJSON)),
    };
}

export function SitemapPackagesExportModelToJSON(value?: SitemapPackagesExportModel | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'branch': value['branch'],
        'packages': value['packages'] == null ? undefined : ((value['packages'] as Array<any>).map(SitemapPackagesElementModelToJSON)),
    };
}

