/* tslint:disable */
/* eslint-disable */
/**
 * ALTRepo API
 * altrepo API v1
 *
 * The version of the OpenAPI document: 1.19.15
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface TaskMisconflictPackageModel
 */
export interface TaskMisconflictPackageModel {
    /**
     * package name
     * @type {string}
     * @memberof TaskMisconflictPackageModel
     */
    inputPackage?: string;
    /**
     * package name
     * @type {string}
     * @memberof TaskMisconflictPackageModel
     */
    conflictPackage?: string;
    /**
     * package version
     * @type {string}
     * @memberof TaskMisconflictPackageModel
     */
    version?: string;
    /**
     * package release
     * @type {string}
     * @memberof TaskMisconflictPackageModel
     */
    release?: string;
    /**
     * package epoch
     * @type {number}
     * @memberof TaskMisconflictPackageModel
     */
    epoch?: number;
    /**
     * package archs
     * @type {Array<string>}
     * @memberof TaskMisconflictPackageModel
     */
    archs?: Array<string>;
    /**
     * conflict files
     * @type {Array<string>}
     * @memberof TaskMisconflictPackageModel
     */
    filesWithConflict?: Array<string>;
}

/**
 * Check if a given object implements the TaskMisconflictPackageModel interface.
 */
export function instanceOfTaskMisconflictPackageModel(value: object): value is TaskMisconflictPackageModel {
    return true;
}

export function TaskMisconflictPackageModelFromJSON(json: any): TaskMisconflictPackageModel {
    return TaskMisconflictPackageModelFromJSONTyped(json, false);
}

export function TaskMisconflictPackageModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): TaskMisconflictPackageModel {
    if (json == null) {
        return json;
    }
    return {
        
        'inputPackage': json['input_package'] == null ? undefined : json['input_package'],
        'conflictPackage': json['conflict_package'] == null ? undefined : json['conflict_package'],
        'version': json['version'] == null ? undefined : json['version'],
        'release': json['release'] == null ? undefined : json['release'],
        'epoch': json['epoch'] == null ? undefined : json['epoch'],
        'archs': json['archs'] == null ? undefined : json['archs'],
        'filesWithConflict': json['files_with_conflict'] == null ? undefined : json['files_with_conflict'],
    };
}

export function TaskMisconflictPackageModelToJSON(value?: TaskMisconflictPackageModel | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'input_package': value['inputPackage'],
        'conflict_package': value['conflictPackage'],
        'version': value['version'],
        'release': value['release'],
        'epoch': value['epoch'],
        'archs': value['archs'],
        'files_with_conflict': value['filesWithConflict'],
    };
}

