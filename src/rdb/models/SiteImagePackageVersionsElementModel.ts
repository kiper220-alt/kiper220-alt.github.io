/* tslint:disable */
/* eslint-disable */
/**
 * ALTRepo API
 * altrepo API v1
 *
 * The version of the OpenAPI document: 1.19.15
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface SiteImagePackageVersionsElementModel
 */
export interface SiteImagePackageVersionsElementModel {
    /**
     * image tag
     * @type {string}
     * @memberof SiteImagePackageVersionsElementModel
     */
    tag?: string;
    /**
     * image root UUID
     * @type {string}
     * @memberof SiteImagePackageVersionsElementModel
     */
    uuid?: string;
    /**
     * Image version major
     * @type {number}
     * @memberof SiteImagePackageVersionsElementModel
     */
    versionMajor?: number;
    /**
     * Image version minor
     * @type {number}
     * @memberof SiteImagePackageVersionsElementModel
     */
    versionMinor?: number;
    /**
     * Image version sub
     * @type {number}
     * @memberof SiteImagePackageVersionsElementModel
     */
    versionSub?: number;
    /**
     * Image architecture
     * @type {string}
     * @memberof SiteImagePackageVersionsElementModel
     */
    imgArch?: string;
    /**
     * Image platform
     * @type {string}
     * @memberof SiteImagePackageVersionsElementModel
     */
    platform?: string;
    /**
     * Image variant
     * @type {string}
     * @memberof SiteImagePackageVersionsElementModel
     */
    variant?: string;
    /**
     * Image flavor
     * @type {string}
     * @memberof SiteImagePackageVersionsElementModel
     */
    flavor?: string;
    /**
     * Image type
     * @type {string}
     * @memberof SiteImagePackageVersionsElementModel
     */
    type?: string;
    /**
     * package hash UInt64 as string
     * @type {string}
     * @memberof SiteImagePackageVersionsElementModel
     */
    hash?: string;
    /**
     * package name
     * @type {string}
     * @memberof SiteImagePackageVersionsElementModel
     */
    name?: string;
    /**
     * package version
     * @type {string}
     * @memberof SiteImagePackageVersionsElementModel
     */
    version?: string;
    /**
     * package release
     * @type {string}
     * @memberof SiteImagePackageVersionsElementModel
     */
    release?: string;
    /**
     * package arch
     * @type {string}
     * @memberof SiteImagePackageVersionsElementModel
     */
    arch?: string;
}

/**
 * Check if a given object implements the SiteImagePackageVersionsElementModel interface.
 */
export function instanceOfSiteImagePackageVersionsElementModel(value: object): value is SiteImagePackageVersionsElementModel {
    return true;
}

export function SiteImagePackageVersionsElementModelFromJSON(json: any): SiteImagePackageVersionsElementModel {
    return SiteImagePackageVersionsElementModelFromJSONTyped(json, false);
}

export function SiteImagePackageVersionsElementModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): SiteImagePackageVersionsElementModel {
    if (json == null) {
        return json;
    }
    return {
        
        'tag': json['tag'] == null ? undefined : json['tag'],
        'uuid': json['uuid'] == null ? undefined : json['uuid'],
        'versionMajor': json['version_major'] == null ? undefined : json['version_major'],
        'versionMinor': json['version_minor'] == null ? undefined : json['version_minor'],
        'versionSub': json['version_sub'] == null ? undefined : json['version_sub'],
        'imgArch': json['img_arch'] == null ? undefined : json['img_arch'],
        'platform': json['platform'] == null ? undefined : json['platform'],
        'variant': json['variant'] == null ? undefined : json['variant'],
        'flavor': json['flavor'] == null ? undefined : json['flavor'],
        'type': json['type'] == null ? undefined : json['type'],
        'hash': json['hash'] == null ? undefined : json['hash'],
        'name': json['name'] == null ? undefined : json['name'],
        'version': json['version'] == null ? undefined : json['version'],
        'release': json['release'] == null ? undefined : json['release'],
        'arch': json['arch'] == null ? undefined : json['arch'],
    };
}

export function SiteImagePackageVersionsElementModelToJSON(value?: SiteImagePackageVersionsElementModel | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'tag': value['tag'],
        'uuid': value['uuid'],
        'version_major': value['versionMajor'],
        'version_minor': value['versionMinor'],
        'version_sub': value['versionSub'],
        'img_arch': value['imgArch'],
        'platform': value['platform'],
        'variant': value['variant'],
        'flavor': value['flavor'],
        'type': value['type'],
        'hash': value['hash'],
        'name': value['name'],
        'version': value['version'],
        'release': value['release'],
        'arch': value['arch'],
    };
}

