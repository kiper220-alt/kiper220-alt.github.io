/* tslint:disable */
/* eslint-disable */
/**
 * ALTRepo API
 * altrepo API v1
 *
 * The version of the OpenAPI document: 1.19.15
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ImageJSONElementModel
 */
export interface ImageJSONElementModel {
    /**
     * ISO image edition
     * @type {string}
     * @memberof ImageJSONElementModel
     */
    imgEdition: string;
    /**
     * ISO image name
     * @type {string}
     * @memberof ImageJSONElementModel
     */
    imgName: string;
    /**
     * hide - hide image, show - show image
     * @type {string}
     * @memberof ImageJSONElementModel
     */
    imgShow: string;
    /**
     * image summary in Russian
     * @type {string}
     * @memberof ImageJSONElementModel
     */
    imgSummaryRu?: string;
    /**
     * image summary in English
     * @type {string}
     * @memberof ImageJSONElementModel
     */
    imgSummaryEn?: string;
    /**
     * support start date
     * @type {Date}
     * @memberof ImageJSONElementModel
     */
    imgStartDate: Date;
    /**
     * support end date
     * @type {Date}
     * @memberof ImageJSONElementModel
     */
    imgEndDate: Date;
    /**
     * link to mailing list
     * @type {string}
     * @memberof ImageJSONElementModel
     */
    imgMailingList?: string;
    /**
     * image name for bugzilla
     * @type {string}
     * @memberof ImageJSONElementModel
     */
    imgNameBugzilla?: string;
    /**
     * image mirror's auxilary info as JSON substructure
     * @type {object}
     * @memberof ImageJSONElementModel
     */
    imgJson: object;
}

/**
 * Check if a given object implements the ImageJSONElementModel interface.
 */
export function instanceOfImageJSONElementModel(value: object): value is ImageJSONElementModel {
    if (!('imgEdition' in value) || value['imgEdition'] === undefined) return false;
    if (!('imgName' in value) || value['imgName'] === undefined) return false;
    if (!('imgShow' in value) || value['imgShow'] === undefined) return false;
    if (!('imgStartDate' in value) || value['imgStartDate'] === undefined) return false;
    if (!('imgEndDate' in value) || value['imgEndDate'] === undefined) return false;
    if (!('imgJson' in value) || value['imgJson'] === undefined) return false;
    return true;
}

export function ImageJSONElementModelFromJSON(json: any): ImageJSONElementModel {
    return ImageJSONElementModelFromJSONTyped(json, false);
}

export function ImageJSONElementModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): ImageJSONElementModel {
    if (json == null) {
        return json;
    }
    return {
        
        'imgEdition': json['img_edition'],
        'imgName': json['img_name'],
        'imgShow': json['img_show'],
        'imgSummaryRu': json['img_summary_ru'] == null ? undefined : json['img_summary_ru'],
        'imgSummaryEn': json['img_summary_en'] == null ? undefined : json['img_summary_en'],
        'imgStartDate': (new Date(json['img_start_date'])),
        'imgEndDate': (new Date(json['img_end_date'])),
        'imgMailingList': json['img_mailing_list'] == null ? undefined : json['img_mailing_list'],
        'imgNameBugzilla': json['img_name_bugzilla'] == null ? undefined : json['img_name_bugzilla'],
        'imgJson': json['img_json'],
    };
}

export function ImageJSONElementModelToJSON(value?: ImageJSONElementModel | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'img_edition': value['imgEdition'],
        'img_name': value['imgName'],
        'img_show': value['imgShow'],
        'img_summary_ru': value['imgSummaryRu'],
        'img_summary_en': value['imgSummaryEn'],
        'img_start_date': ((value['imgStartDate']).toISOString()),
        'img_end_date': ((value['imgEndDate']).toISOString()),
        'img_mailing_list': value['imgMailingList'],
        'img_name_bugzilla': value['imgNameBugzilla'],
        'img_json': value['imgJson'],
    };
}

