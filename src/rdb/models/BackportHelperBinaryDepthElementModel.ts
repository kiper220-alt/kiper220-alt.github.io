/* tslint:disable */
/* eslint-disable */
/**
 * ALTRepo API
 * altrepo API v1
 *
 * The version of the OpenAPI document: 1.19.15
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { BackportHelperBinaryElementModel } from './BackportHelperBinaryElementModel';
import {
    BackportHelperBinaryElementModelFromJSON,
    BackportHelperBinaryElementModelFromJSONTyped,
    BackportHelperBinaryElementModelToJSON,
} from './BackportHelperBinaryElementModel';

/**
 * 
 * @export
 * @interface BackportHelperBinaryDepthElementModel
 */
export interface BackportHelperBinaryDepthElementModel {
    /**
     * dependency depth
     * @type {number}
     * @memberof BackportHelperBinaryDepthElementModel
     */
    depth?: number;
    /**
     * packages dependencies list
     * @type {Array<BackportHelperBinaryElementModel>}
     * @memberof BackportHelperBinaryDepthElementModel
     */
    packages?: Array<BackportHelperBinaryElementModel>;
}

/**
 * Check if a given object implements the BackportHelperBinaryDepthElementModel interface.
 */
export function instanceOfBackportHelperBinaryDepthElementModel(value: object): value is BackportHelperBinaryDepthElementModel {
    return true;
}

export function BackportHelperBinaryDepthElementModelFromJSON(json: any): BackportHelperBinaryDepthElementModel {
    return BackportHelperBinaryDepthElementModelFromJSONTyped(json, false);
}

export function BackportHelperBinaryDepthElementModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): BackportHelperBinaryDepthElementModel {
    if (json == null) {
        return json;
    }
    return {
        
        'depth': json['depth'] == null ? undefined : json['depth'],
        'packages': json['packages'] == null ? undefined : ((json['packages'] as Array<any>).map(BackportHelperBinaryElementModelFromJSON)),
    };
}

export function BackportHelperBinaryDepthElementModelToJSON(value?: BackportHelperBinaryDepthElementModel | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'depth': value['depth'],
        'packages': value['packages'] == null ? undefined : ((value['packages'] as Array<any>).map(BackportHelperBinaryElementModelToJSON)),
    };
}

