/* tslint:disable */
/* eslint-disable */
/**
 * ALTRepo API
 * altrepo API v1
 *
 * The version of the OpenAPI document: 1.19.15
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  APIVersion,
} from '../models/index';
import {
    APIVersionFromJSON,
    APIVersionToJSON,
} from '../models/index';

/**
 * 
 */
export class ApiApi extends runtime.BaseAPI {

    /**
     * get license
     */
    async getApiLicenseRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/license`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * get license
     */
    async getApiLicense(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.getApiLicenseRaw(initOverrides);
    }

    /**
     * get API version
     */
    async getApiVersionRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<APIVersion>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/version`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => APIVersionFromJSON(jsonValue));
    }

    /**
     * get API version
     */
    async getApiVersion(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<APIVersion> {
        const response = await this.getApiVersionRaw(initOverrides);
        return await response.value();
    }

}
